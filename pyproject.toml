[build-system]
requires = [
    "setuptools>=45",
    "setuptools_scm[toml]>=7.0",
]
build-backend = "setuptools.build_meta"

[project]
name = "scippuncertainty"
description = "Advanced uncertainty propagation with Scipp"
license = { "file" = "LICENSE" }
readme = "README.md"
keywords = []
classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
    "Typing :: Typed",
]
dynamic = ["version"]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.20",
    "scipp"
]

[project.optional-dependencies]
all = ["rich"]

[project.urls]
"Documentation" = "https://scipp.github.io/scippuncertainty"
"Bug Tracker" = "https://github.com/scipp/scippuncertainty/issues"
"Source" = "https://github.com/scipp/scippuncertainty"

[tool.setuptools_scm]

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = "tests"
addopts = """
--strict-config
--strict-markers
-ra
-v
"""
filterwarnings = [
    "error",
]

[tool.mypy]
mypy_path = "src"
ignore_missing_imports = true
enable_error_code = [
    "ignore-without-code",
    "redundant-expr",
    "truthy-bool",
]
strict = true
show_error_codes = true
warn_unreachable = true

[tool.ruff]
line-length = 88
select = ["B", "D", "E", "F", "I", "S", "T", "FBT003", "RUF100"]
ignore = [
    "B905", # `zip()` without an explicit `strict=` parameter
    "E741", "E742", "E743", # do not use names ‘l’, ‘O’, or ‘I’; they are not a problem with a proper font
]
extend-exclude = [".*", "__pycache__", "build", "dist"]
fixable = ["I001", # import sorting
]

[tool.ruff.per-file-ignores]
"tests/*" = [
    "S101", # asserts are fine in tests
    # don't need docstrings in tests
    "D100", "D101", "D102", "D103", "D104", "D105",
]
"docs/*" = [
    # don't need docstrings for docs internals
    "D100", "D101", "D102", "D103", "D104", "D105",
]

[tool.ruff.isort]
known-first-party = ["scippuncertainty"]

[tool.ruff.pydocstyle]
convention = "numpy"
